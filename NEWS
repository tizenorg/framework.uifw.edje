Edje 1.3.0

Changes since Edje 1.2.0:
-------------------------

Additions:
    * Add edje_watch to monitore change on edje source.
    * Emit ['edje,change,file', 'edje'] when the file change on disk.
    * edje_player will automatically reload the file when it change on disk.

Improvements:
    * Allocate once and reuse Evas_Map.
    * Make edje_cc faster by improving the parser, mapping file in memory and using threads.

Fixes:
    * Add missing files in the tarballs.
    * Prevent crash when running nested edje_object_signal_emit with edje_object_signal_callback_{add,del}.
    * Do actually verify that the file on disk is different from the file we have loaded.
    * Preserve user drag, box and table information during call of edje_object_file_set.
    * Fix table and text when fixed point is turned on.
    * Clamp image tween to never underflow also.

Edje 1.2.0

Changes since Edje 1.1.0:
-------------------------

Additions:

    * "recalc" smart callback for object size changes.
    * EDJE_ASPECT_PREFER_SOURCE.
    * edje.version() Lua function.
    * minmul edc property.
    * add min: SOURCE and max: SOURCE to IMAGE and GROUP parts.
    * add broadcast_signal: bool.
    * add edje_object_part_text_imf_context_get().
    * add edje_object_update_hints_set() and edje_object_update_hints_get().
    * nee keybindings in entry flr ctrl+arrows, ctrl+del and ctrl+backspace.
    * cursor,changed,manual signal from entry.
    * undo/redo in entry + IMF.
    * HEX, TERMINAL, PASSOWORD vkbd types added.
    * recalc smart callback for object size changes back to C.
    * EDJE_ASPECT_PREFER_SOURCE.
    * Lua: edje.version().
    * minmul property.
    * edje_object_part_text_style_user_set/get().
    * min/max: SOURCE.
    * edje_object_text_markup_filter_callback_add/del/del_full().
    * edje_object_part_text_input_panel_show/hide().
    * edje_object_part_text_imf_context_reset().
    * edje_object_part_text_prediction_allow_set/get().
    * add a way to disable signal broadcasting.
    * edje_object_part_text_input_panel_language_set/get().
    * edje_object_part_text_input_panel_imdata_set/get().
    * edje_object_part_text_input_panel_return_key_type_set/get().
    * edje_object_part_text_input_panel_return_key_disabled_set/get().
    * edje_object_part_text_user_insert()
    * double click in entry selects word, triple selects line.
    * EDJE_VERSION_12 define in edc for #ifdefs handling edje 1.2 (or older)
    * edje_object_part_text_escaped_set()

Improvements:
    * speedup load time of Edje file.
    * check existence of group at compile time also.
    * reduce number of call to stat during edje_object_file_set.
    * unswallow object about to be swallowed if necessary.
    * Lua scripts now more resilient against API changes.
    * edje_cc only store the image actively used in an edje file.
    * reduction in part walking.
    * check group existence at edje_cc time.
    * edje_object_part_text_cursor_content_get() prototype fixed.
    * calling non-existant lua functions doesn't crash now.
    * make it possible to update size hints automatically

Fixes:
    * Correctly count and propagate preload signal with GROUP.
    * Fix rotation with fixed point.
    * Correctly propagate scale factor to GROUP.
    * Potential crash from buffer overflow copying map data.
    * Limits detection by edje_cc.
    * Errant free() call in loading of edje files.
    * unswallow objects that are going to be swallowed elsewhere.
    * ability to change edje source correctly inside edje callback.
    * overriding group in edje_cc.
    * filter now only valid once program affecting parts is done.
    * edje_object_part_text_input_panel_enabled_set/get if IMF doesn't exist.
    * EDJE_CALC_CACHE issues and when using relative to_x/y on separate parts.
    * filter preventing any action being triggered.
    * signal propagation when matching target GROUP exists.
    * correctly count and propagate preload signal with GROUP
    * rotation with fixed point
    * propagate scale factor to GROUPS
    * fix no number inserts even if numlock is locked

Changes since Edje 1.0.0:
-------------------------

Additions:

    * "UNDER" entry cursor mode
    * auto alignment of TEXT parts with text.alignment set to -1
    * mirroring support
    * edje_object_part_text_cursor_pos_set/get()
    * size_range propert to TEXT parts
    * proxy parts so part can source other parts including swallows
    * support explicit shadow direction with added effect param
    * edje_object_part_text_append()
    * new interpolations: ACCEL_FAC, DECEL_FAC, SIN_FAC, DIVIS, BOUNCE, SPRING
    * "entry,paste,request,1" signal (primary)
    * "entry,paste,request,3" signal (clipboard)
    * "entry,selection,all,request" signal
    * "entry,selection,none,request" signal
    * "entry,paste,request*" signals afte cursor change
    * "entry,changed,user" signal
    * collection.group.limits.horizontal/vertical
    * input panel layout setting API's
    * edje_object_signal_callback_extra_data_get()
    * group inheritance and part re-ordering with inheritance
    * add change information to "entry,changed,user"
    * add "CURRENT" option for transitions to transition from current state
    * lua color/text class, map, text, image, line, polygon and edje object API's

Fixes:

    * invalid memory access in edje alias code
    * recusive aliases fixed
    * cursor didn't change on backspace signal
    * propagation of recursive events on existing part
    * box/table signal not including name correctly
    * clicked signal on entry
    * propagation of recursive events between existing and non-existing parts
    * textblock handling in size_min_restricted_calc fixed
    * stop emitting "cursor,changed" on text set
    * external usage in sub groups now have proper parents
    * ellipsis fixed with small text parts
    * edje_shutdown() fixed if called before all edje objects are gone
    * allow -1 for description.max

Improvements:

    * built-in epp (from e16) to replace cpp/gcc pre-processor on all platforms
    * edje_decc only uses edje_cc as compiler for security paranoia
    * use smart clipper more from evas
    * text.align now works for textblock too
    * creation/deletion of edje objects should be faster with freeze and thaws
    * don't walk eina_list when deleting member classes - faster
    * part.description.max now can define just 1 axis
    * signal and message propagation is more consistent and simpler now
